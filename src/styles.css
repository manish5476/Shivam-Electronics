@import "tailwindcss";

html, body { height: 100%; }

/* PrimeIcons import remains the same */
@import "primeicons/primeicons.css";


/*-------------------------------------------------------------------*/
/* Theme Configuration (Optional @theme for v4 specific features)    */
/*-------------------------------------------------------------------*/
/*
 * Use @theme primarily for things Tailwind doesn't infer from standard CSS,
 * like custom fonts or breakpoints, if needed.
 * For colors, defining standard CSS variables below is usually sufficient in v4.
 */
@theme {
  /* Example: Define custom font or breakpoint variables */
  /* --font-display: "Your Custom Font", sans-serif; */
  /* --breakpoint-3xl: 1920px; */
}

/*-------------------------------------------------------------------*/
/* CSS Variable Definitions (Core Theme Setup)                       */
/*-------------------------------------------------------------------*/
:root {
  /* DEFAULT THEME (Light Mode) */
  /* Define colors using RGB values (space-separated) for opacity compatibility */

  /* Primary Colors (Example: Blue) */
  --color-primary-rgb: 79 70 229;      /* indigo-600 */
  --color-primary-hover-rgb: 67 56 202;  /* indigo-700 */
  --color-secondary-rgb: 234 179 8;      /* yellow-500 */
  --color-accent-rgb: 219 39 119;       /* pink-600 */

  /* Text Colors */
  --color-text-base-rgb: 17 24 39;      /* gray-900 */
  --color-text-muted-rgb: 75 85 99;      /* gray-500 */
  --color-text-inverted-rgb: 255 255 255; /* White */

  /* Background Colors */
  --color-bg-base-rgb: 249 250 251;     /* gray-50 */
  --color-surface-rgb: 255 255 255;     /* White - for cards, dialogs */

  /* Border Color */
  --color-border-rgb: 209 213 219;     /* gray-300 */

  /* Status Colors */
  --color-success-rgb: 22 163 74;        /* green-600 */
  --color-warning-rgb: 234 179 8;        /* yellow-500 */
  --color-error-rgb: 220 38 38;         /* red-600 */

  /* --- Define usable color variables referencing the RGB values --- */
  /* These are what you'll use in var() */
  --color-primary: rgb(var(--color-primary-rgb));
  --color-primary-hover: rgb(var(--color-primary-hover-rgb));
  --color-secondary: rgb(var(--color-secondary-rgb));
  --color-accent: rgb(var(--color-accent-rgb));
  --color-text-base: rgb(var(--color-text-base-rgb));
  --color-text-muted: rgb(var(--color-text-muted-rgb));
  --color-text-inverted: rgb(var(--color-text-inverted-rgb));
  --color-bg-base: rgb(var(--color-bg-base-rgb));
  --color-surface: rgb(var(--color-surface-rgb));
  --color-border: rgb(var(--color-border-rgb));
  --color-success: rgb(var(--color-success-rgb));
  --color-warning: rgb(var(--color-warning-rgb));
  --color-error: rgb(var(--color-error-rgb));

  /* Define user-specific variable placeholder */
  --user-text-color: initial; /* Default, can be overridden by JS */

  /* --- PrimeNG Variable Overrides (Optional - Adjust as needed) --- */
  /* Use the final color vars. Check PrimeNG docs for theme variables. */
  --primary-color: var(--color-primary); /* Example override */
  --text-color: var(--color-text-base);
  --surface-ground: var(--color-bg-base);
  --surface-card: var(--color-surface);
  --surface-border: var(--color-border);
  /* ... add more PrimeNG variables to sync */
}

/* DARK THEME */
/* Ensure your theme switching logic adds/removes this class to the <body> */
body.dark-mode {
  /* Override RGB values for dark mode */
  --color-primary-rgb: 99 102 241;      /* indigo-500 */
  --color-primary-hover-rgb: 79 70 229;  /* indigo-600 */
  --color-secondary-rgb: 250 204 21;     /* yellow-400 */
  --color-accent-rgb: 236 72 153;       /* pink-500 */

  --color-text-base-rgb: 229 231 235;    /* gray-200 */
  --color-text-muted-rgb: 156 163 175;    /* gray-400 */
  --color-text-inverted-rgb: 17 24 39;     /* gray-900 */

  --color-bg-base-rgb: 17 24 39;        /* gray-900 */
  --color-surface-rgb: 31 41 55;        /* gray-800 */

  --color-border-rgb: 55 65 81;         /* gray-700 */

  --color-success-rgb: 34 197 94;        /* green-500 */
  --color-warning-rgb: 250 204 21;       /* yellow-400 */
  --color-error-rgb: 248 113 113;       /* red-400 */

  /* The actual --color-* variables update automatically */
  /* because they reference the -rgb variables */

  /* PrimeNG Dark Variable Overrides */
  /* These also update automatically if defined as above */
}


/*-------------------------------------------------------------------*/
/* Base Styles (Apply the CSS Variables)                           */
/*-------------------------------------------------------------------*/
body {
  background-color: var(--color-bg-base);
  color: var(--color-text-base);
  font-family: Roboto, "Helvetica Neue", sans-serif; /* Keep your font */
  margin: 0;
  min-height: 100%;
  -webkit-font-smoothing: antialiased; /* Optional: Improves font rendering */
  -moz-osx-font-smoothing: grayscale; /* Optional: Improves font rendering */
}

html {
  height: 100%;
}

/* Example: Default link color */
a {
  color: var(--color-primary);
  text-decoration: none;
}
a:hover {
  color: var(--color-primary-hover);
  text-decoration: underline;
}

/*-------------------------------------------------------------------*/
/* Tailwind Directives (If not handled by @import "tailwindcss")     */
/*-------------------------------------------------------------------*/
/*
 * In many v4 setups, `@import "tailwindcss"` might handle injecting these.
 * If styles are missing, you might need to add these explicitly AFTER
 * your variable definitions and base styles. Check v4 docs for Angular.
 */
/* @tailwind base; */
/* @tailwind components; */
/* @tailwind utilities; */

/*-------------------------------------------------------------------*/
/* Custom Components (Optional)                                      */
/*-------------------------------------------------------------------*/
@layer components {
  /* Example: Define components using arbitrary value syntax with CSS Vars */


  /* .btn-primary {
    @apply inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-[--color-text-inverted] bg-[--color-primary] hover:bg-[--color-primary-hover] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[--color-primary] disabled:opacity-50 disabled:cursor-not-allowed;
    @apply focus:ring-offset-[--color-bg-base]; 
  }

   .btn-secondary {
      @apply inline-flex items-center justify-center px-4 py-2 border border-[--color-border] text-sm font-medium rounded-md shadow-sm text-[--color-text-base] bg-[--color-surface] hover:bg-[--color-border]/20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[--color-primary] disabled:opacity-50 disabled:cursor-not-allowed;
      @apply focus:ring-offset-[--color-bg-base];
   } */

  /* Reusable text styles */
  .text-primary {
    color: var(--color-primary);
  }
  .text-muted {
    color: var(--color-text-muted);
  }
  .text-inverted {
    color: var(--color-text-inverted);
  }

  /* Reusable background styles */
  .bg-surface {
    background-color: var(--color-surface);
  }
  .bg-base {
    background-color: var(--color-bg-base);
  }

  /* Reusable border */
  .border-base {
    border-color: var(--color-border);
  }

  /* Unified card wrapper */
  .app-card {
    /* @apply bg-[--color-surface] p-4 md:p-6 rounded-xl shadow border border-[--color-border]; */
  }

  /* Common section layout */
  .app-section {
    /* @apply bg-[--color-surface] rounded-xl border border-[--color-border] p-6 my-4 shadow-sm; */
  }

  /* Common button variations */
  .btn-primary {
    /* @apply inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-[--color-text-inverted] bg-[--color-primary] hover:bg-[--color-primary-hover] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[--color-primary] disabled:opacity-50 disabled:cursor-not-allowed; */
    /* @apply focus:ring-offset-[--color-bg-base]; */
  }

  .btn-secondary {
    /* @apply inline-flex items-center justify-center px-4 py-2 border border-[--color-border] text-sm font-medium rounded-md shadow-sm text-[--color-text-base] bg-[--color-surface] hover:bg-[--color-border]/20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[--color-primary] disabled:opacity-50 disabled:cursor-not-allowed; */
    /* @apply focus:ring-offset-[--color-bg-base]; */
  }

  /* Uniform heading styles */
  .heading-1 {
    /* @apply text-2xl font-semibold text-[--color-text-base] mb-4; */
  }

  .heading-2 {
    /* @apply text-xl font-semibold text-[--color-text-base] mb-3; */
  }

  .heading-muted {
    /* @apply text-lg font-medium text-[--color-text-muted]; */
  }
} 
/* Global Layout & Color Palette */
:root {
  --primary-color: #4c1d95; /* Dark Purple */
  --primary-light: #7c3aed;
  --background-dark: #1e1b2e;
  --background-light: #ffffff;
  --text-light: #f5f5f5;
  --text-dark: #b28200;
  --border-color: #3f3f46;
}

/* Container */
.container {
  background-color: var(--background-light);
  color: var(--text-dark);
}

/* Card Containers */
.card {
  background-color: var(--background-dark);
  border: 1px solid var(--border-color);
  border-radius: 1rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  padding: 2rem;
  transition: transform 0.2s ease-in-out;
}

.card:hover {
  transform: translateY(-2px);
}

/* Section Headers */
.card h2 {
  color: var(--primary-light);
  font-weight: 600;
}

/* Input Styles */
input[type="text"],
input[type="number"],
select,
textarea {
  width: 100%;
  padding: 0.75rem;
  border-radius: 0.5rem;
  border: 1px solid var(--border-color);
  background-color: #f8fafc;
  color: var(--text-dark);
  font-size: 0.95rem;
  transition: border 0.2s, box-shadow 0.2s;
}

input:focus,
select:focus,
textarea:focus {
  border-color: var(--primary-light);
  box-shadow: 0 0 0 2px rgba(124, 58, 237, 0.2);
  outline: none;
}

/* Buttons */
button {
  background-color: var(--primary-color);
  color: white;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 0.5rem;
  font-weight: 500;
  transition: background-color 0.3s ease;
  cursor: pointer;
}

button:hover {
  background-color: var(--primary-light);
}

/* Labels */
label {
  display: block;
  margin-bottom: 0.25rem;
  font-weight: 600;
  color: var(--text-dark);
}

/* JSON error */
.text-red-500 {
  color: #dc2626;
}
/* Grid for 2 items per row */
.form-grid,
.detail-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
}

@media (min-width: 768px) {
  .form-grid,
  .detail-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Detail Row (dt/dd pairs) */
.detail-row {
  display: flex;
  flex-direction: column;
  background-color: var(--background-dark);
  padding: 1rem;
  border-radius: 0.5rem;
  color: var(--text-light);
  transition: transform 0.3s ease;
}

.detail-row:hover {
  transform: scale(1.02);
}

.detail-row dt {
  font-weight: bold;
  margin-bottom: 0.25rem;
  color: var(--primary-light);
}

.detail-row dd {
  color: #d1d5db;
  margin: 0;
}
